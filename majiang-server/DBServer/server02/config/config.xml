<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://code.alibabatech.com/schema/dubbo   http://code.alibabatech.com/schema/dubbo/dubbo.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
  
    <context:component-scan base-package="com.hogense.dao" />
    <context:component-scan base-package="com.hogense.redis" />
    <context:annotation-config />
    
   <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  
    	init-method="init" destroy-method="close">  
	    <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
	    <property name="url" value="jdbc:mysql://192.168.100.7/db_account?characterEncoding=utf-8" />  
	    <property name="username" value="root" />  
	    <property name="password" value="Hogense@112x" />  
	    <!-- 初始化连接大小 -->  
	    <property name="initialSize" value="0" />  
	    <!-- 连接池最大使用连接数量 -->  
	    <property name="maxActive" value="500" />  
	    <!-- 连接池最小空闲 -->  
	    <property name="minIdle" value="0" />  
	    <!-- 获取连接最大等待时间 -->  
	    <property name="maxWait" value="60000" />  
	    <property name="validationQuery" value="select 1" />  
	    <property name="testOnBorrow" value="true" />  
	    <property name="testOnReturn" value="false" />  
	    <property name="testWhileIdle" value="true" />  
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />  
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
	    <property name="minEvictableIdleTimeMillis" value="3600000" />  
	    <!-- 打开removeAbandoned功能 -->  
	    <property name="removeAbandoned" value="true" />  
	    <!-- 1800秒，也就是30分钟 -->  
	    <property name="removeAbandonedTimeout" value="1800" />  
	    <!-- 关闭abanded连接时输出错误日志 -->  
	    <property name="logAbandoned" value="true" />  
	    <!-- 监控数据库 -->  
	    <!-- 配置监控统计拦截的filters -->  
	    <!-- <property name="filters" value="mergeStat" /> -->  
	    <property name="filters" value="stat,config" />  
	    <!-- 数据库密码加密 -->  
	    <!-- <property name="connectionProperties" value="config.decrypt=true"   
	        /> -->  
	</bean>  
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    	  <property name="dataSource" ref="dataSource"/>  
    </bean>
 
     <!-- redis config -->
     <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="50" />
        <property name="maxIdle" value="8" />
        <property name="maxWaitMillis" value="10000" />
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
        <!-- property name="testWhileIdle" value="true"/>  -->
    </bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="com.hogense.redis.JedisShardInfo">
                    <constructor-arg index="0" value="192.168.100.5" />
                    <!-- port -->
                    <constructor-arg index="1" value="6379"  />
                    <!-- connecttimeout -->
                    <constructor-arg index="2" value="5000" />
                    <!-- sotimeout -->
                    <constructor-arg index="3" value="5000" />
                     <!-- weight -->
                    <constructor-arg index="4" value="1" />
                     <!-- ssl -->
                    <constructor-arg index="5" value="false" />
                    <property name="password" value="rs123456"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    <!-- end redis config -->
 
	 <dubbo:application name="pdmjdbserver2"  />
    <dubbo:registry protocol="zookeeper" address="192.168.100.5:2181"  />
    <dubbo:protocol name="dubbo" port="20882" threads="1024"/>
    <dubbo:service  timeout="10000"  retries="2" loadbalance="random" actives="1000" interface="com.hogense.roomgame.service.interfaces.AccountService" ref="accountService" />
    <bean id="accountService" class="com.hogense.roomgame.AccountServiceImp" /> 
 	
 	<dubbo:service  timeout="10000"  retries="2" loadbalance="random" actives="1000" interface="com.hogense.roomgame.service.interfaces.RoomService" ref="roomService" />
    <bean id="roomService" class="com.hogense.roomgame.RoomServiceImp" /> 
     <dubbo:service  timeout="5000"  retries="2" loadbalance="random" actives="1000" interface="com.hogense.roomgame.service.interfaces.DaoService" ref="daoService" />
    <bean id="daoService" class="com.hogense.roomgame.DaoServiceImp" />  
</beans>
