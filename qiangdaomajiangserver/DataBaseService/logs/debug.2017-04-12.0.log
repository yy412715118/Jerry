2017-04-12 18:05:08 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:08 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:08 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:08 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:08 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:08 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:08 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:09 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:09 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:09 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:09 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:09 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:09 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 18:05:09 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 18:05:09 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 18:05:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 18:05:09 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 18:05:09 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 18:05:09 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 18:05:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,676,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:05:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,677,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:05:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,678,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:05:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,679,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D10511%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1491991508862,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D10511%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1491991508862 
2017-04-12 18:05:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,680,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:05:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,681,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:05:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,682,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:05:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,682,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{13,13,1491982261993,1491982261993,0,0,0,0,0,0,13} 
2017-04-12 18:05:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,682,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 18:05:09 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:09 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:17 [DubboServerHandler-192.168.1.112:20881-thread-2] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:19 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170033 after 0ms
2017-04-12 18:05:29 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170033 after 0ms
2017-04-12 18:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170033 after 0ms
2017-04-12 18:05:49 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170033 after 0ms
2017-04-12 18:05:57 [DubboServerHandler-192.168.1.112:20881-thread-3] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:05:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170033 after 0ms
2017-04-12 18:06:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170033 after 0ms
2017-04-12 18:06:19 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170033 after 0ms
2017-04-12 18:06:29 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170033 after 0ms
2017-04-12 18:06:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170033 after 0ms
2017-04-12 18:06:49 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170033 after 0ms
2017-04-12 18:06:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,683,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D10511%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1491991508862,-1  response:: null
2017-04-12 18:06:54 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 18:06:54 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 18:06:54 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b61129d170033
2017-04-12 18:06:54 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b61129d170033
2017-04-12 18:06:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170033, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,684,0  request:: null response:: null
2017-04-12 18:06:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b61129d170033 : Unable to read additional data from server sessionid 0x15b61129d170033, likely server has closed socket
2017-04-12 18:06:54 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b61129d170033
2017-04-12 18:06:54 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 18:06:58 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:58 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 18:06:59 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 18:06:59 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 18:06:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 18:06:59 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 18:06:59 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 18:06:59 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 18:06:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,686,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:06:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,687,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:06:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,688,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:06:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,689,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D10528%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1491991619262,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D10528%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1491991619262 
2017-04-12 18:06:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,690,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:06:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,691,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:06:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,692,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:06:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,692,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{13,13,1491982261993,1491982261993,0,0,0,0,0,0,13} 
2017-04-12 18:06:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,692,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:06:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:07:05 [DubboServerHandler-192.168.1.112:20881-thread-2] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:07:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170034 after 0ms
2017-04-12 18:07:19 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170034 after 0ms
2017-04-12 18:07:29 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170034 after 0ms
2017-04-12 18:07:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170034 after 0ms
2017-04-12 18:07:49 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170034 after 0ms
2017-04-12 18:07:59 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170034 after 0ms
2017-04-12 18:08:09 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170034 after 0ms
2017-04-12 18:08:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,693,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D10528%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1491991619262,-1  response:: null
2017-04-12 18:08:16 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 18:08:16 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 18:08:16 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b61129d170034
2017-04-12 18:08:16 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b61129d170034
2017-04-12 18:08:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170034, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,694,0  request:: null response:: null
2017-04-12 18:08:16 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b61129d170034
2017-04-12 18:08:16 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:20 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 18:08:20 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 18:08:20 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 18:08:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 18:08:21 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 18:08:21 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 18:08:21 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 18:08:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,696,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:08:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,697,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:08:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,698,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:08:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,699,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D10539%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1491991700578,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D10539%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1491991700578 
2017-04-12 18:08:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,700,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:08:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,701,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:08:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,702,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 18:08:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,702,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{13,13,1491982261993,1491982261993,0,0,0,0,0,0,13} 
2017-04-12 18:08:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,702,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 18:08:21 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:21 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:25 [DubboServerHandler-192.168.1.112:20881-thread-2] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:26 [DubboServerHandler-192.168.1.112:20881-thread-2] DEBUG com.hogense.roomgame.AccountServiceImp - from sql
2017-04-12 18:08:31 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170035 after 0ms
2017-04-12 18:08:41 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170035 after 0ms
2017-04-12 18:08:41 [DubboServerHandler-192.168.1.112:20881-thread-3] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:41 [DubboServerHandler-192.168.1.112:20881-thread-3] DEBUG com.hogense.roomgame.AccountServiceImp - from redis
2017-04-12 18:08:43 [DubboServerHandler-192.168.1.112:20881-thread-4] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:08:43 [DubboServerHandler-192.168.1.112:20881-thread-4] DEBUG com.hogense.roomgame.AccountServiceImp - from redis
2017-04-12 18:08:51 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170035 after 0ms
2017-04-12 18:09:01 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170035 after 0ms
2017-04-12 18:09:11 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170035 after 0ms
2017-04-12 18:09:21 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170035 after 0ms
2017-04-12 18:09:28 [DubboServerHandler-192.168.1.112:20881-thread-5] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:09:28 [DubboServerHandler-192.168.1.112:20881-thread-5] DEBUG com.hogense.roomgame.AccountServiceImp - from redis
2017-04-12 18:09:31 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170035 after 1ms
2017-04-12 18:09:38 [DubboServerHandler-192.168.1.112:20881-thread-6] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 18:09:38 [DubboServerHandler-192.168.1.112:20881-thread-6] DEBUG com.hogense.roomgame.AccountServiceImp - from redis
2017-04-12 18:09:41 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170035 after 0ms
2017-04-12 18:09:51 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170035 after 0ms
2017-04-12 18:10:01 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b61129d170035 after 0ms
2017-04-12 18:10:02 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,705,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D10539%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1491991700578,-1  response:: null
2017-04-12 18:10:02 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 18:10:02 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 18:10:02 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b61129d170035
2017-04-12 18:10:02 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b61129d170035
2017-04-12 18:10:02 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b61129d170035, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,706,0  request:: null response:: null
2017-04-12 18:10:02 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b61129d170035 : Unable to read additional data from server sessionid 0x15b61129d170035, likely server has closed socket
2017-04-12 18:10:02 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b61129d170035
2017-04-12 18:10:02 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 22:57:11 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:11 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:11 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:11 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:11 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:11 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:11 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:11 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:12 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:12 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:12 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:12 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:12 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 22:57:12 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 22:57:12 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 22:57:12 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 22:57:12 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 22:57:12 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 22:57:12 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 22:57:12 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,2,0  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo 
2017-04-12 22:57:12 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,3,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService 
2017-04-12 22:57:12 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,4,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers 
2017-04-12 22:57:12 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,5,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1109%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009031802,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1109%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009031802 
2017-04-12 22:57:12 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,6,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 22:57:12 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,7,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 22:57:12 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,8,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators 
2017-04-12 22:57:12 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,8,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 22:57:12 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,8,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 22:57:12 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:12 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 22:57:22 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0000 after 1ms
2017-04-12 22:57:32 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0000 after 1ms
2017-04-12 22:57:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,9,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1109%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009031802,-1  response:: null
2017-04-12 22:57:38 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 22:57:38 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 22:57:38 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be0000
2017-04-12 22:57:38 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be0000
2017-04-12 22:57:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0000, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,10,0  request:: null response:: null
2017-04-12 22:57:38 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be0000
2017-04-12 22:57:38 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:00:35 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:35 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:35 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:35 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:35 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:35 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:35 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:35 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:35 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:35 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:36 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:36 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:36 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:00:36 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:00:36 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:00:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:00:36 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:00:36 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:00:36 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:00:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,12,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:00:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,13,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:00:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,14,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:00:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,15,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1155%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009235829,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1155%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009235829 
2017-04-12 23:00:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,16,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:00:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,17,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:00:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,18,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:00:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,18,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:00:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,18,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:00:36 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:36 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:00:46 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:00:56 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:01:06 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:01:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:01:26 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:01:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:01:46 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:01:56 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:02:06 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:02:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:02:26 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:02:36 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:02:46 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:02:56 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 0ms
2017-04-12 23:03:06 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:03:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:03:26 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 1ms
2017-04-12 23:03:35 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,19,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1155%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009235829,-1  response:: null
2017-04-12 23:03:35 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0001 after 30ms
2017-04-12 23:03:35 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 23:03:35 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 23:03:35 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be0001
2017-04-12 23:03:35 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be0001
2017-04-12 23:03:35 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0001, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,20,0  request:: null response:: null
2017-04-12 23:03:35 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be0001
2017-04-12 23:03:35 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b62a844be0001 : Unable to read additional data from server sessionid 0x15b62a844be0001, likely server has closed socket
2017-04-12 23:03:35 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:05:38 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:38 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:05:39 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:05:39 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:05:39 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:05:39 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:05:39 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,22,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,23,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,24,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,25,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1201%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009539159,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1201%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009539159 
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,26,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,27,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,28,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,28,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,28,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,29,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1201%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009539159,-1  response:: null
2017-04-12 23:05:39 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 23:05:39 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 23:05:39 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be0002
2017-04-12 23:05:39 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be0002
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0002, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,30,0  request:: null response:: null
2017-04-12 23:05:39 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be0002
2017-04-12 23:05:39 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:05:39 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b62a844be0002 : Unable to read additional data from server sessionid 0x15b62a844be0002, likely server has closed socket
2017-04-12 23:06:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:54 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:55 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:55 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:06:55 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:06:55 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:06:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:06:55 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:06:55 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:06:55 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:06:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,32,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:06:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,33,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:06:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,34,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:06:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,35,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1209%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009614721,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1209%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009614721 
2017-04-12 23:06:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,36,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:06:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,37,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:06:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,38,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:06:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,38,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:06:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,38,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:06:55 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:06:55 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:07:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,39,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1209%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009614721,-1  response:: null
2017-04-12 23:07:00 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 23:07:00 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 23:07:00 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be0003
2017-04-12 23:07:00 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be0003
2017-04-12 23:07:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0003, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,40,0  request:: null response:: null
2017-04-12 23:07:00 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be0003
2017-04-12 23:07:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b62a844be0003 : Unable to read additional data from server sessionid 0x15b62a844be0003, likely server has closed socket
2017-04-12 23:07:00 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:08:17 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:17 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:08:18 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:08:18 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:08:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:08:18 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:08:18 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:08:18 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:08:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,42,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:08:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,43,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:08:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,44,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:08:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,45,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1220%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009698205,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1220%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009698205 
2017-04-12 23:08:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,46,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:08:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,47,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:08:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,48,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:08:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,48,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:08:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,48,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:18 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:08:25 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,49,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1220%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009698205,-1  response:: null
2017-04-12 23:08:25 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 23:08:25 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 23:08:25 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be0004
2017-04-12 23:08:25 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be0004
2017-04-12 23:08:25 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0004, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,50,0  request:: null response:: null
2017-04-12 23:08:25 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be0004
2017-04-12 23:08:25 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b62a844be0004 : Unable to read additional data from server sessionid 0x15b62a844be0004, likely server has closed socket
2017-04-12 23:08:25 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:10:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:10:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:10:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:10:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:10:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:10:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:10:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:10:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:10:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:10:59 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:00 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:00 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:00 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:11:00 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:11:00 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:11:00 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:11:00 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:11:00 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,52,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,53,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,54,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,55,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1237%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009859783,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1237%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009859783 
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,56,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,57,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,58,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,58,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,58,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:11:00 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:00 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,59,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1237%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009859783,-1  response:: null
2017-04-12 23:11:00 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 23:11:00 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 23:11:00 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be0005
2017-04-12 23:11:00 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be0005
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0005, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,60,0  request:: null response:: null
2017-04-12 23:11:00 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be0005
2017-04-12 23:11:00 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b62a844be0005 : Unable to read additional data from server sessionid 0x15b62a844be0005, likely server has closed socket
2017-04-12 23:11:00 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:47 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:11:47 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:11:47 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:11:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:11:47 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:11:47 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:11:47 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:11:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,62,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,63,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,64,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,65,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1244%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009907584,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1244%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009907584 
2017-04-12 23:11:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,66,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,67,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,68,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:11:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,68,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:11:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,68,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:11:48 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:48 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:11:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0006 after 0ms
2017-04-12 23:12:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be0006 after 0ms
2017-04-12 23:12:11 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,69,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1244%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009907584,-1  response:: null
2017-04-12 23:12:11 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 23:12:11 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 23:12:11 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be0006
2017-04-12 23:12:11 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be0006
2017-04-12 23:12:11 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0006, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,70,0  request:: null response:: null
2017-04-12 23:12:11 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be0006
2017-04-12 23:12:11 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b62a844be0006 : Unable to read additional data from server sessionid 0x15b62a844be0006, likely server has closed socket
2017-04-12 23:12:11 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:12:15 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:15 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:12:16 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:12:16 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:12:16 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:12:16 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:12:16 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,72,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,73,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,74,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,75,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1247%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009936001,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1247%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009936001 
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,76,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,77,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,78,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,78,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,78,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,79,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1247%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492009936001,-1  response:: null
2017-04-12 23:12:16 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 23:12:16 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 23:12:16 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be0007
2017-04-12 23:12:16 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be0007
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0007, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,80,0  request:: null response:: null
2017-04-12 23:12:16 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be0007
2017-04-12 23:12:16 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:12:16 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b62a844be0007 : Unable to read additional data from server sessionid 0x15b62a844be0007, likely server has closed socket
2017-04-12 23:14:23 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:23 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:23 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:23 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:23 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:24 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:24 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:24 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:24 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:24 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:24 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:24 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:24 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:14:24 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:14:24 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:14:24 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:14:24 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:14:24 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,82,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,83,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,84,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,85,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1261%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010063926,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1261%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010063926 
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,86,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,87,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,88,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,88,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,88,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:14:24 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:24 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,89,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1261%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010063926,-1  response:: null
2017-04-12 23:14:24 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 23:14:24 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 23:14:24 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be0008
2017-04-12 23:14:24 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be0008
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0008, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,90,0  request:: null response:: null
2017-04-12 23:14:24 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be0008
2017-04-12 23:14:24 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:14:24 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b62a844be0008 : Unable to read additional data from server sessionid 0x15b62a844be0008, likely server has closed socket
2017-04-12 23:14:53 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:53 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:14:54 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:14:54 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:14:54 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:14:54 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:14:54 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,92,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,93,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,94,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,95,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1265%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010094030,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1265%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010094030 
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,96,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,97,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,98,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,98,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,98,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,99,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1265%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010094030,-1  response:: null
2017-04-12 23:14:54 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 23:14:54 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 23:14:54 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be0009
2017-04-12 23:14:54 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be0009
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be0009, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,100,0  request:: null response:: null
2017-04-12 23:14:54 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be0009
2017-04-12 23:14:54 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:14:54 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b62a844be0009 : Unable to read additional data from server sessionid 0x15b62a844be0009, likely server has closed socket
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:44 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:23:44 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:23:45 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:23:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:23:45 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:23:45 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:23:45 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:23:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,102,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:23:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,103,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:23:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,104,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:23:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,105,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1376%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010624570,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1376%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010624570 
2017-04-12 23:23:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,106,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:23:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,107,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:23:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,108,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:23:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,108,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:23:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,108,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:23:45 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:45 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:23:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:24:05 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:24:15 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:24:25 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:24:35 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:24:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:24:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:25:05 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:25:15 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 1ms
2017-04-12 23:25:20 [DubboServerHandler-192.168.1.112:20881-thread-2] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:25:20 [DubboServerHandler-192.168.1.112:20881-thread-2] DEBUG com.hogense.roomgame.AccountServiceImp - from redis
2017-04-12 23:25:25 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:25:35 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:25:39 [DubboServerHandler-192.168.1.112:20881-thread-3] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:25:39 [DubboServerHandler-192.168.1.112:20881-thread-3] DEBUG com.hogense.roomgame.AccountServiceImp - from redis
2017-04-12 23:25:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:25:55 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:26:01 [DubboServerHandler-192.168.1.112:20881-thread-4] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:01 [DubboServerHandler-192.168.1.112:20881-thread-4] DEBUG com.hogense.roomgame.AccountServiceImp - from redis
2017-04-12 23:26:05 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:26:15 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:26:25 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:26:35 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:26:45 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000a after 0ms
2017-04-12 23:26:46 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 10,2  replyHeader:: 10,123,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1376%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010624570,-1  response:: null
2017-04-12 23:26:46 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...
2017-04-12 23:26:46 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkConnection - Closing ZooKeeper connected to 192.168.1.112:2181
2017-04-12 23:26:46 [DubboShutdownHook] DEBUG org.apache.zookeeper.ZooKeeper - Closing session: 0x15b62a844be000a
2017-04-12 23:26:46 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Closing client for session: 0x15b62a844be000a
2017-04-12 23:26:46 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000a, packet:: clientPath:null serverPath:null finished:false header:: 11,-11  replyHeader:: 11,124,0  request:: null response:: null
2017-04-12 23:26:46 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - An exception was thrown while closing send thread for session 0x15b62a844be000a : Unable to read additional data from server sessionid 0x15b62a844be000a, likely server has closed socket
2017-04-12 23:26:46 [DubboShutdownHook] DEBUG org.apache.zookeeper.ClientCnxn - Disconnecting client for session: 0x15b62a844be000a
2017-04-12 23:26:46 [DubboShutdownHook] DEBUG org.I0Itec.zkclient.ZkClient - Closing ZkClient...done
2017-04-12 23:26:56 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:56 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG o.j.netty.channel.socket.nio.NioProviderMetadata -  [DUBBO] Couldn't determine the NIO constraint level from the system properties; using the safest level (2), dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG org.I0Itec.zkclient.ZkConnection - Creating new ZookKeeper instance to connect to 192.168.1.112:2181.
2017-04-12 23:26:57 [main] DEBUG org.apache.zookeeper.ClientCnxn - zookeeper.disableAutoWatchReset is false
2017-04-12 23:26:57 [main] DEBUG org.I0Itec.zkclient.ZkClient - Awaiting connection to Zookeeper server
2017-04-12 23:26:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Session establishment request sent on 192.168.1.112/192.168.1.112:2181
2017-04-12 23:26:57 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Received event: WatchedEvent state:SyncConnected type:None path:null
2017-04-12 23:26:57 [main-EventThread] DEBUG org.I0Itec.zkclient.ZkClient - Leaving process event
2017-04-12 23:26:57 [main] DEBUG org.I0Itec.zkclient.ZkClient - State is SyncConnected
2017-04-12 23:26:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000c, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,126,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:26:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000c, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,127,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:26:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000c, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,128,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:26:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000c, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,129,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1437%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010817130,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/providers/dubbo%253A%252F%252F192.168.1.112%253A20881%252Fcom.hogense.roomgame.service.interfaces.AccountService%253Factives%253D1000%2526anyhost%253Dtrue%2526application%253Dhello-world-app%2526dubbo%253D2.5.3%2526interface%253Dcom.hogense.roomgame.service.interfaces.AccountService%2526loadbalance%253Drandom%2526methods%253DloginByThirdPart%252CloginByUid%2526pid%253D1437%2526retries%253D2%2526side%253Dprovider%2526threads%253D1024%2526timeout%253D5000%2526timestamp%253D1492010817130 
2017-04-12 23:26:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000c, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,130,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:26:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000c, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,131,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:26:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000c, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,132,-110  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2017-04-12 23:26:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000c, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,132,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: s{8,8,1492009032459,1492009032459,0,0,0,0,0,0,8} 
2017-04-12 23:26:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Reading reply sessionid:0x15b62a844be000c, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,132,0  request:: '/dubbo/com.hogense.roomgame.service.interfaces.AccountService/configurators,T  response:: v{} 
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:26:57 [main] DEBUG com.alibaba.dubbo.common.extension.ExtensionLoader -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:27:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:27:09 [DubboServerHandler-192.168.1.112:20881-thread-2] DEBUG com.alibaba.dubbo.remoting.transport.DecodeHandler -  [DUBBO] Decode decodeable message com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:27:09 [DubboServerHandler-192.168.1.112:20881-thread-2] DEBUG com.hogense.roomgame.AccountServiceImp - from redis
2017-04-12 23:27:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:27:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 1ms
2017-04-12 23:27:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 1ms
2017-04-12 23:27:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:27:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:28:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:28:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:28:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:28:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:28:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:28:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:28:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:28:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:29:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:29:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:29:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 1ms
2017-04-12 23:29:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:29:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:29:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:29:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:29:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:30:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 1ms
2017-04-12 23:30:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:30:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:30:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:30:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:30:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:30:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:30:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:31:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:31:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:31:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:31:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 1ms
2017-04-12 23:31:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:31:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:31:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:31:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:32:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:32:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:32:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:32:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:32:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:32:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:32:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:32:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:33:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:33:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:33:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:33:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:33:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:33:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:33:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:33:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:34:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:34:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:34:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:34:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:34:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:34:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:34:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:34:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:35:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:35:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:35:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:35:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:35:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:35:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:35:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:35:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:36:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:36:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 1ms
2017-04-12 23:36:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:36:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:36:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:36:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:36:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:36:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:37:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:37:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:37:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:37:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:37:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:37:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:37:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:37:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:38:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:38:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:38:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 2ms
2017-04-12 23:38:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:38:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:38:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:38:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:38:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:39:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:39:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:39:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:39:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:39:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:39:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:39:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:39:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 1ms
2017-04-12 23:40:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:40:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:40:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:40:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:40:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:40:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:40:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:40:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:41:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:41:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:41:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:41:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:41:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:41:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:41:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:41:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:42:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:42:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:42:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:42:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:42:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:42:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:42:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:42:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:43:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:43:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:43:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:43:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:43:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:43:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:43:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:43:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:44:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:44:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:44:27 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:44:37 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:44:47 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:44:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:44:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:44:57 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:45:07 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:45:17 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:45:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:45:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:45:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:45:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:45:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:46:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:46:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:46:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:46:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:46:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:46:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:46:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:47:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:47:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 1ms
2017-04-12 23:47:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:47:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:47:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:47:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:47:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:48:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:48:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:48:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:48:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:48:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:48:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:48:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:49:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:49:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:49:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:49:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:49:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:49:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Received heartbeat from remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:49:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:50:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:50:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:50:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:50:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:50:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:50:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:51:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:51:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:51:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:51:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:51:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:51:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:51:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:51:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:52:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:52:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:52:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:52:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:52:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:52:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:52:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:52:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:53:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:53:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:53:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:53:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:53:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:53:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:53:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:53:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:54:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:54:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:54:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:54:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:54:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:54:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:54:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:54:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:55:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:55:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:55:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:55:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:55:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:55:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:55:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:55:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:56:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:56:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:56:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:56:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:56:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:56:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:56:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:56:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:57:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:57:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:57:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:57:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:57:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:57:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:57:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:57:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:58:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:58:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:58:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:58:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:58:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:58:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:58:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:58:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:59:08 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:59:18 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:59:28 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:59:38 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:59:48 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
2017-04-12 23:59:57 [dubbo-remoting-server-heartbeat-thread-1] DEBUG c.a.d.r.exchange.support.header.HeartBeatTask -  [DUBBO] Send heartbeat to remote channel /192.168.1.112:49707, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:59:57 [New I/O server worker #1-1] DEBUG c.a.d.r.exchange.support.header.HeartbeatHandler -  [DUBBO] Receive heartbeat response in thread New I/O server worker #1-1, dubbo version: 2.5.3, current host: 127.0.0.1
2017-04-12 23:59:58 [main-SendThread(192.168.1.112:2181)] DEBUG org.apache.zookeeper.ClientCnxn - Got ping response for sessionid: 0x15b62a844be000c after 0ms
